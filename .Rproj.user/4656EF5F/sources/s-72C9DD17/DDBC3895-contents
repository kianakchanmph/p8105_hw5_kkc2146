---
title: "Homework 5" 
output: github_document
Kiana Chan
---

## Problem 0 
This “problem” focuses on structure of your submission, especially the use git and GitHub for reproducibility, R Projects to organize your work, R Markdown to write reproducible reports, relative paths to load data from local files, and reasonable naming structures for your files.

```{r setup, include = FALSE}
library(tidyverse)
library(rvest)
set.seed(1)

knitr::opts_chunk$set(
  fig.width = 6,
  fig.asp = .6,
  out.width = "90%"
)

theme_set(theme_minimal() + theme(legend.position = "bottom"))

options(
  ggplot2.continuous.colour = "viridis",
  ggplot2.continuous.fill = "viridis"
)

scale_colour_discrete = scale_colour_viridis_d
scale_fill_discrete = scale_fill_viridis_d
```

## Problem 1 
The Washington Post has gathered data on homicides in 50 large U.S. cities and made the data available through a GitHub repository. 

Describe the raw data. Create a city_state variable (e.g. “Baltimore, MD”) and then summarize within cities to obtain the total number of homicides and the number of unsolved homicides (those for which the disposition is “Closed without arrest” or “Open/No arrest”).

```{r}
homicide_df = 
    read.csv("./data/homicide-data.csv", na = c("", "Unknown")) %>%
               mutate(city_state = str_c(city, state),
                 resolution = case_when(
                   disposition == "Closed without arrest" ~ "unsolved",
                   disposition == "Open/No arrest" ~ "unsolved",
                   disposition == "Closed by arrest" ~ "solved")) %>% 
               relocate(city_state) %>% 
              filter(city_state != "TulseAL")
  
```
The raw data contains a unique ID, reported data of homicide, victim first and last name, victim race and age, city, state, latititude/longitude, disposition, and resolution of the case. 

For the city of Baltimore, MD, use the prop.test function to estimate the proportion of homicides that are unsolved; save the output of prop.test as an R object, apply the broom::tidy to this object and pull the estimated proportion and confidence intervals from the resulting tidy dataframe.

Let's focus on Baltimore, MD 

```{r}
baltimore_df = 
  homicide_df %>% 
  filter(city_state == "BaltimoreMD")

baltimore_summary = 
  baltimore_df %>% 
  summarize(
    unsolved = sum(resolution == "unsolved"),
    n = n())
baltimore_test = 
  prop.test(
    x = baltimore_summary %>%  pull(unsolved), 
    n = baltimore_summary %>%  pull(n))

baltimore_test %>% 
  broom::tidy() #takes output of prop.test and organizes as a dataframe
```





Now run prop.test for each of the cities in your dataset, and extract both the proportion of unsolved homicides and the confidence interval for each. Do this within a “tidy” pipeline, making use of purrr::map, purrr::map2, list columns and unnest as necessary to create a tidy dataframe with estimated proportions and CIs for each city.

Create a plot that shows the estimates and CIs for each city – check out geom_errorbar for a way to add error bars based on the upper and lower limits. Organize cities according to the proportion of unsolved homicides.



